{"version":3,"file":"static/js/404.f6a55135.chunk.js","mappings":"sPAGAA,EAAAA,EAAAA,SAAAA,QAAyB,uCAGzB,IAAMC,EAAgB,SAAAC,GACpBF,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBAAwDE,EACzD,EAQYC,GAAWC,EAAAA,EAAAA,IACtB,gBADsC,mCAEtC,WAAOC,EAAaC,GAApB,gGAEsBN,EAAAA,EAAAA,KAAW,gBAAiBK,GAFlD,cAEUE,EAFV,OAIIN,EAAcM,EAAIC,KAAKN,OAJ3B,kBAKWK,EAAIC,MALf,yDAOWF,EAASG,gBAAgB,KAAMC,UAP1C,yDAFsC,yD,IAenBN,EAAAA,EAAAA,IACnB,aADmC,mCAEnC,WAAOC,EAAaC,GAApB,gGAEsBN,EAAAA,EAAAA,KAAW,eAAgBK,GAFjD,cAEUE,EAFV,OAIIN,EAAcM,EAAIC,KAAKN,OAJ3B,kBAKWK,EAAIC,MALf,yDAOWF,EAASG,gBAAgB,KAAMC,UAP1C,yDAFmC,0DAefN,EAAAA,EAAAA,IAAiB,cAAD,mCAAgB,WAAOO,EAAGL,GAAV,0FAE5CN,EAAAA,EAAAA,KAAW,iBAFiC,OAlCpDA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAA8C,GAkCM,wEAM3CM,EAASG,gBAAgB,KAAMC,UANY,wDAAhB,yD,QC3CzBE,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,kBAAMC,SAda,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,EACEV,EAAS,CACPiB,KAAMF,EAAKG,SAASD,KAAKE,MACzBC,MAAOL,EAAKG,SAASE,MAAMD,MAC3BE,SAAUN,EAAKG,SAASG,SAASF,SAGrCJ,EAAKO,OACN,EAG+BC,aAAa,MAA3C,WACE,yCAEE,kBAAOC,KAAK,OAAOP,KAAK,aAE1B,sCAEE,kBAAOO,KAAK,QAAQP,KAAK,cAE3B,yCAEE,kBAAOO,KAAK,WAAWP,KAAK,iBAE9B,mBAAQO,KAAK,SAAb,wBAGL,ECjCc,SAASC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACjB,EAAD,MAGL,C","sources":["redux/auth/operations.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'http://connections-api.herokuapp.com';\n\n//utility to add JWT\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\n//utility to remove JWT\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\n/*POST /users/signup */\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/signup', credentials);\n      //after successful registration add the token to the HTTP header\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n/*POST /users/login */\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/login', credentials);\n      //after successful login add the token to the HTTP header\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n/*POST /users/logout */\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout');\n    //after successful logout remove the token from the HTTP header\n    clearAuthHeader();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Username\n        <input type=\"text\" name=\"name\" />\n      </label>\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["axios","setAuthHeader","token","register","createAsyncThunk","credentials","thunkAPI","res","data","rejectWithValue","message","_","RegisterForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","email","password","reset","autoComplete","type","Register","Helmet"],"sourceRoot":""}